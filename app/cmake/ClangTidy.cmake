# ClangTidy.cmake
cmake_minimum_required(VERSION 3.10)

# Find clang-tidy if not already found
find_program(CLANG_TIDY_EXECUTABLE NAMES clang-tidy)
if(NOT CLANG_TIDY_EXECUTABLE)
    message(FATAL_ERROR "clang-tidy not found! Please install clang-tidy or check your PATH.")
endif()

# Set the directory where the source files are located
set(CLANG_TIDY_SOURCE_DIR ${CMAKE_SOURCE_DIR}/src)

# Recursively find all header and source files in the specified directory
file(GLOB_RECURSE ALL_SOURCE_FILES
     ${CLANG_TIDY_SOURCE_DIR}/*.cpp
     ${CLANG_TIDY_SOURCE_DIR}/*.h)

# Create a custom target to run clang-tidy
add_custom_target(
    clang_tidy
    COMMAND ${CLANG_TIDY_EXECUTABLE}
            -p ${CMAKE_BINARY_DIR} # Use the compile_commands.json generated by CMake
            ${ALL_SOURCE_FILES}
    WORKING_DIRECTORY ${CMAKE_SOURCE_DIR}
    COMMENT "Running clang-tidy using .clang-tidy configuration"
    VERBATIM
)

# Ensure that clang-tidy is part of the project build
add_dependencies(${PROJECT_NAME} clang_tidy)
